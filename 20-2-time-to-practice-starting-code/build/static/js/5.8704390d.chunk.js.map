{"version":3,"sources":["components/quotes/NoQuotesFound.js","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","QuoteItem","props","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"mIAAA,oCAceA,IAXO,WACpB,OACE,sBAAKC,UAAWC,IAAQC,SAAxB,UACE,iDACA,cAAC,OAAD,CAAMF,UAAU,MAAMG,GAAG,aAAzB,8B,mBCNNC,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,0FCkB5CC,EAhBG,SAACC,GACjB,OACE,qBAAIP,UAAWC,IAAQO,KAAvB,UACE,mCACE,qCACE,4BAAID,EAAME,SAEZ,qCAAaF,EAAMG,YAErB,cAAC,OAAD,CAAMV,UAAU,MAAMG,GAAE,kBAAaI,EAAMI,IAA3C,iC,iBC0CSC,EAtCG,SAACL,GAEjB,IAZkBM,EAAQC,EAYpBC,EAAUC,uBACVC,EAAWC,wBAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAUrCC,GA3BYV,EA2BcN,EAAMM,OA3BZC,EA2BoBK,EA1BvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAwBxC,OACE,eAAC,WAAD,WACE,qBAAKX,UAAWC,IAAQ0B,QAAxB,SACE,yBAAQC,QAbe,WAE3Bb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAYF,EAAqB,OAAS,UAS9C,kBAA6CA,EAAqB,aAAe,iBAEnF,oBAAInB,UAAWC,IAAQ8B,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVD,OAAQuB,EAAMvB,OACdD,KAAMwB,EAAMxB,MAHPwB,EAAMtB,a,wBCJRuB,UAhCG,WAEd,MAA2DC,YACvDC,KACA,GAFIC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcC,EAAnC,EAA6BC,KAAoBC,EAAjD,EAAiDA,MASjD,OAJAC,qBAAU,WACNL,MACD,CAACA,IAEW,YAAXC,EAEI,qBAAKtC,UAAU,WAAf,SACI,cAAC2C,EAAA,EAAD,MAKG,UAAXL,EACO,mBAAGtC,UAAU,mBAAb,SAAiCyC,IAG7B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAKzD,cAAC,EAAD,CAAW/B,OAAQ0B,IAJZ,cAACxC,EAAA,EAAD","file":"static/js/5.8704390d.chunk.js","sourcesContent":["import { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__1l42s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2kQ2k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3dcIa\",\"sorting\":\"QuoteList_sorting__17ELv\"};","import { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom/cjs/react-router-dom.min';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const changeSortingHandler = () => {\n\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    });\n  }\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useEffect } from 'react';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n\r\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(\r\n        getAllQuotes,\r\n        true\r\n    );\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if( status === 'pending') {\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if( status === 'error') {\r\n        return <p className='centered focused'>{error}</p>;\r\n    }\r\n\r\n    if( status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0 )) {\r\n        return <NoQuotesFound />\r\n    }\r\n\r\n    return (\r\n        <QuoteList quotes={loadedQuotes} />\r\n    );\r\n};\r\n\r\nexport default AllQuotes;"],"sourceRoot":""}